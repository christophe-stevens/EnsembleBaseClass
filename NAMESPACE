# Generated by roxygen2: fake comment so roxygen2 overwrites silently.
#exportPattern("^[^\\.]")


importFrom("graphics", "legend", "plot", "points")
importFrom("stats", ".getXlevels", "cor", "delete.response",
           "model.frame", "model.matrix", "model.response", "na.fail",
           "na.pass", "predict", "terms")
importFrom("utils", "flush.console")
  
importFrom(gbm,gbm,predict.gbm)
importFrom(nnet,nnet)
importFrom(e1071,svm)
importFrom(randomForest,randomForest)
import(kknn)
importFrom(doParallel,registerDoParallel)
importFrom(doParallel,stopImplicitCluster)
import(methods)
importFrom(foreach, "%dopar%")
importFrom(foreach,foreach)
importFrom(glmnet, glmnet)
importFrom(bartMachine, bartMachine)



## utils.R
export(generate.partition, generate.partitions
  , rmse.error, load.object, extract.baselearner.name
  , regression.extract.response, classification.extract.response)

## integrators.R
#  classes
exportClasses(Regression.Integrator.Config, Regression.Integrator.FitObj
  , Regression.Select.Config, RegressionSelectPred, Regression.Select.FitObj)
# methods
exportMethods(Regression.Integrator.Fit, Regression.Select.Fit)
exportMethods(Classification.Integrator.Fit, Classification.Select.Fit)

## baselearners.R
# classes
exportClasses(BaseLearner.Config
  , Regression.Config, RegressionEstObj, Classification.Config, ClassificationEstObj
  , OptionalNumeric, OptionalInteger, OptionalCharacter
  , BaseLearner.FitObj, Regression.FitObj, Classification.FitObj
  , BaseLearner.CV.FitObj, Regression.CV.FitObj, Classification.CV.FitObj
  , Instance, Instance.List
  , BaseLearner.CV.Batch.FitObj, Regression.CV.Batch.FitObj, Classification.CV.Batch.FitObj
  , BaseLearner.Batch.FitObj, Regression.Batch.FitObj, Classification.Batch.FitObj)

# methods
exportMethods(BaseLearner.Fit, validate)
S3method(predict, Regression.CV.FitObj)
S3method(predict, Regression.CV.Batch.FitObj)
S3method(plot, Regression.CV.Batch.FitObj)
S3method(predict, Regression.Batch.FitObj)
S3method(plot, Regression.Batch.FitObj)
S3method(print, validate.Regression.Batch.FitObj)
S3method(predict, Classification.CV.FitObj)
S3method(predict, Classification.CV.Batch.FitObj)
S3method(plot, Classification.CV.Batch.FitObj)
S3method(predict, Classification.Batch.FitObj)
S3method(plot, Classification.Batch.FitObj)
S3method(print, validate.Classification.Batch.FitObj)

# functions
export(make.configs, Regression.CV.Fit, Classification.CV.Fit, make.instances
  , Regression.CV.Batch.Fit, Classification.CV.Batch.Fit, Regression.Batch.Fit,
  Classification.Batch.Fit)
  
# GBM
exportClasses(GBM.Regression.Config, GBM.Regression.FitObj)
S3method(predict, GBM.Regression.FitObj)
exportClasses(GBM.Classification.Config, GBM.Classification.FitObj)
S3method(predict, GBM.Classification.FitObj)

# NNET
exportClasses(NNET.Regression.Config, NNET.Regression.FitObj)
S3method(predict, NNET.Regression.FitObj)
exportClasses(NNET.Classification.Config, NNET.Classification.FitObj)
S3method(predict, NNET.Classification.FitObj)

# KNN
exportClasses(KNN.Regression.Config, KNN.Regression.FitObj)
S3method(predict, KNN.Regression.FitObj)
exportClasses(KNN.Classification.Config, KNN.Classification.FitObj)
S3method(predict, KNN.Classification.FitObj)

# RF
exportClasses(RF.Regression.Config, RF.Regression.FitObj)
S3method(predict, RF.Regression.FitObj)
exportClasses(RF.Classification.Config, RF.Classification.FitObj)
S3method(predict, RF.Classification.FitObj)

# SVM
exportClasses(SVM.Regression.Config, SVM.Regression.FitObj)
S3method(predict, SVM.Regression.FitObj)
exportClasses(SVM.Classification.Config, SVM.Classification.FitObj)
S3method(predict, SVM.Classification.FitObj)

# PENREG
exportClasses(PENREG.Regression.Config, PENREG.Regression.FitObj)
S3method(predict, PENREG.Regression.FitObj)
exportClasses(PENREG.Classification.Config, PENREG.Classification.FitObj)
S3method(predict, PENREG.Classification.FitObj)

# BART
exportClasses(BART.Regression.Config, BART.Regression.FitObj)
S3method(predict, BART.Regression.FitObj)
exportClasses(BART.Classification.Config, BART.Classification.FitObj)
S3method(predict, BART.Classification.FitObj)


# XGBOOST
exportClasses(XGBOOST.Regression.Config, XGBOOST.Regression.FitObj)
S3method(predict, XGBOOST.Regression.FitObj)
exportClasses(XGBOOST.Classification.Config, XGBOOST.Classification.FitObj)
S3method(predict, XGBOOST.Classification.FitObj)

